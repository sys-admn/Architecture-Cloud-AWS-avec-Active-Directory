#!/bin/sh
# Simple pre-commit hook to check for secrets before committing to Git

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo "${YELLOW}Running pre-commit hook to check for secrets...${NC}"

# Files to check (staged files only)
FILES=$(git diff --cached --name-only)

# Flag to track if any secrets were found
SECRETS_FOUND=0

# Check for private key files
KEY_FILES=$(git diff --cached --name-only | grep -E '\.(pem|key|ppk)$' || true)
if [ -n "$KEY_FILES" ]; then
    echo "${RED}Warning: You are attempting to commit private key files:${NC}"
    echo "${RED}$KEY_FILES${NC}"
    SECRETS_FOUND=1
fi

# Check for .tfvars files that might be committed despite .gitignore
TFVARS_FILES=$(git diff --cached --name-only | grep '\.tfvars$' | grep -v '\.example\.tfvars$\|\.tfvars\.example$' || true)
if [ -n "$TFVARS_FILES" ]; then
    echo "${RED}Warning: You are attempting to commit .tfvars files which may contain secrets:${NC}"
    echo "${RED}$TFVARS_FILES${NC}"
    SECRETS_FOUND=1
fi

# If secrets were found, abort the commit
if [ $SECRETS_FOUND -eq 1 ]; then
    echo "${RED}Error: Potential secrets found in your commit.${NC}"
    echo "${YELLOW}Please remove the secrets or add the files to .gitignore before committing.${NC}"
    echo "${YELLOW}If you're sure these aren't actual secrets, you can bypass this check with:${NC}"
    echo "${YELLOW}  git commit --no-verify${NC}"
    exit 1
else
    # Run the PowerShell script for more thorough checks
    powershell.exe -ExecutionPolicy Bypass -NoProfile -File "./pre-commit-windows.ps1"
    exit $?
fi