#!/bin/sh
#
# Pre-commit hook to check for secrets before committing to Git
# Place this file in .git/hooks/pre-commit and make it executable

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo "${YELLOW}Running pre-commit hook to check for secrets...${NC}"

# Files to check (staged files only)
FILES=$(git diff --cached --name-only)

# Flag to track if any secrets were found
SECRETS_FOUND=0

# Check each staged file
for FILE in $FILES; do
    # Skip binary files and files that don't exist
    if [[ ! -f "$FILE" ]] || [[ -z $(grep -I '' "$FILE" 2>/dev/null) ]]; then
        continue
    fi
    
    # Skip files in .terraform directory
    if [[ "$FILE" == *".terraform/"* ]] || [[ "$FILE" == *".git/"* ]] || [[ "$FILE" == "pre-commit" ]]; then
        continue
    fi
    
    # Check for AWS Access Keys
    if grep -q "AKIA[0-9A-Z]\{16\}" "$FILE" 2>/dev/null; then
        if [[ $SECRETS_FOUND -eq 0 ]]; then
            echo "${RED}Potential secrets found in the following files:${NC}"
            SECRETS_FOUND=1
        fi
        echo "${RED}  - $FILE (matched pattern: AWS Access Key)${NC}"
        grep -n --color=always "AKIA[0-9A-Z]\{16\}" "$FILE" 2>/dev/null | head -3
        echo ""
    fi
    
    # Check for AWS Secret Keys
    if grep -q "[0-9a-zA-Z/+]\{40\}" "$FILE" 2>/dev/null; then
        if [[ $SECRETS_FOUND -eq 0 ]]; then
            echo "${RED}Potential secrets found in the following files:${NC}"
            SECRETS_FOUND=1
        fi
        echo "${RED}  - $FILE (matched pattern: AWS Secret Key)${NC}"
        grep -n --color=always "[0-9a-zA-Z/+]\{40\}" "$FILE" 2>/dev/null | head -3
        echo ""
    fi
    
    # Check for API keys
    if grep -q "api[_-]\?key[ :=][\"'][^\"']*[\"']" "$FILE" 2>/dev/null; then
        if [[ $SECRETS_FOUND -eq 0 ]]; then
            echo "${RED}Potential secrets found in the following files:${NC}"
            SECRETS_FOUND=1
        fi
        echo "${RED}  - $FILE (matched pattern: API Key)${NC}"
        grep -n --color=always "api[_-]\?key[ :=][\"'][^\"']*[\"']" "$FILE" 2>/dev/null | head -3
        echo ""
    fi
    
    # Check for tokens
    if grep -q "token[ :=][\"'][^\"']*[\"']" "$FILE" 2>/dev/null; then
        if [[ $SECRETS_FOUND -eq 0 ]]; then
            echo "${RED}Potential secrets found in the following files:${NC}"
            SECRETS_FOUND=1
        fi
        echo "${RED}  - $FILE (matched pattern: Token)${NC}"
        grep -n --color=always "token[ :=][\"'][^\"']*[\"']" "$FILE" 2>/dev/null | head -3
        echo ""
    fi
    
    # Check for secrets
    if grep -q "secret[ :=][\"'][^\"']*[\"']" "$FILE" 2>/dev/null; then
        if [[ $SECRETS_FOUND -eq 0 ]]; then
            echo "${RED}Potential secrets found in the following files:${NC}"
            SECRETS_FOUND=1
        fi
        echo "${RED}  - $FILE (matched pattern: Secret)${NC}"
        grep -n --color=always "secret[ :=][\"'][^\"']*[\"']" "$FILE" 2>/dev/null | head -3
        echo ""
    fi
    
    # Check for passwords
    if grep -q "password[ :=][\"'][^\"']*[\"']" "$FILE" 2>/dev/null; then
        if [[ $SECRETS_FOUND -eq 0 ]]; then
            echo "${RED}Potential secrets found in the following files:${NC}"
            SECRETS_FOUND=1
        fi
        echo "${RED}  - $FILE (matched pattern: Password)${NC}"
        grep -n --color=always "password[ :=][\"'][^\"']*[\"']" "$FILE" 2>/dev/null | head -3
        echo ""
    fi
    
    # Check for private keys
    if grep -q -- "-----BEGIN.*PRIVATE KEY" "$FILE" 2>/dev/null; then
        if [[ $SECRETS_FOUND -eq 0 ]]; then
            echo "${RED}Potential secrets found in the following files:${NC}"
            SECRETS_FOUND=1
        fi
        echo "${RED}  - $FILE (matched pattern: Private Key)${NC}"
        grep -n --color=always -- "-----BEGIN.*PRIVATE KEY" "$FILE" 2>/dev/null | head -3
        echo ""
    fi
done

# Special check for .tfvars files that might be committed despite .gitignore
TFVARS_FILES=$(git diff --cached --name-only | grep '\.tfvars$' || true)
if [[ -n "$TFVARS_FILES" ]]; then
    echo "${RED}Warning: You are attempting to commit .tfvars files which may contain secrets:${NC}"
    echo "${RED}$TFVARS_FILES${NC}"
    echo "${YELLOW}These files are typically ignored in .gitignore because they may contain sensitive data.${NC}"
    SECRETS_FOUND=1
fi

# Check for private key files
KEY_FILES=$(git diff --cached --name-only | grep -E '\.(pem|key|ppk)$' || true)
if [[ -n "$KEY_FILES" ]]; then
    echo "${RED}Warning: You are attempting to commit private key files:${NC}"
    echo "${RED}$KEY_FILES${NC}"
    SECRETS_FOUND=1
fi

# If secrets were found, abort the commit
if [[ $SECRETS_FOUND -eq 1 ]]; then
    echo "${RED}Error: Potential secrets found in your commit.${NC}"
    echo "${YELLOW}Please remove the secrets or add the files to .gitignore before committing.${NC}"
    echo "${YELLOW}If you're sure these aren't actual secrets, you can bypass this check with:${NC}"
    echo "${YELLOW}  git commit --no-verify${NC}"
    exit 1
else
    echo "${GREEN}No secrets found. Proceeding with commit.${NC}"
fi

exit 0